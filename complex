namespace don
{
    class Complex
    {
        public double R, I;

        public Complex(double r, double i)
        {
            this.I = i;
            this.R = r;
        }

        public static Complex operator +(Complex z1, Complex z2)
        {
            return new Complex(z1.R + z2.R, z1.I + z2.I);
        }
        public static Complex operator -(Complex z1, Complex z2)
        {
            return new Complex(z1.R - z2.R, z1.I - z2.I);
        }
        public static Complex operator *(Complex z1, Complex z2)
        {
            return new Complex(z1.R * z2.R - z1.I*z2.I , z1.R * z2.I + z2.R*z1.I);
        }
        public static Complex operator /(Complex z1, Complex z2)//
        {
            
            {
             return new Complex((z1.R * z2.R + z1.I * z2.I) / (z2.R * z2.R + z2.I * z2.I), (z1.I * z2.R - z2.I * z1.R)/(z2.R * z2.R + z2.I * z2.I));
            }
            
        }
        public static double GetArg(Complex z1)
        {
            return System.Math.Sqrt(z1.R * z1.R + z1.I * z1.I);
        }


    }
    class programm
    {

     
    static void Main()
        {
            var z1 = new Complex(1, 2);
            var z2 = new Complex(3, 4);
            var z3 = z1 / z2;
            Console.WriteLine(z1.R);
            Console.WriteLine(z1.I);
            Console.WriteLine(z2.R);
            Console.WriteLine(z2.I);
            Console.WriteLine(z3.R);
            Console.WriteLine(z3.I);
        }
    }
}
